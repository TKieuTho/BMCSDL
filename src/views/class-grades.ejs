<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bảng điểm Lớp <%= classId %> - Hệ thống Quản lý Sinh viên</title>
    <link rel="stylesheet" href="<%= BASE_URL %>/css/style.css">
    <style>
 .edit-grade-btn, .update-grade-btn, .cancel-grade-btn {
            padding: 10px 20px;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            text-decoration: none;
            transition: var(--transition);
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            background-color: #65c0d5;
         }

        .edit-grade-btn:hover, .update-grade-btn:hover, .cancel-grade-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);   
        }
        .grade-input {
            width: 60px;
            padding: 2px;
            text-align: center;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        .error-message {
            color: #e74c3c;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #e74c3c;
            border-radius: 4px;
        }
        .pagination {
            margin-top: 20px;
            text-align: center;
        }
        .pagination button {
            padding: 8px 12px;
            margin: 0 5px;
            border: 1px solid #3498db;
            background-color: #fff;
            color: #3498db;
            cursor: pointer;
            border-radius: 4px;
            font-size: 14px;
        }
        .pagination button:hover {
            background-color: #3498db;
            color: #fff;
        }
        .pagination button.active {
            background-color: #3498db;
            color: #fff;
            font-weight: bold;
        }
        .pagination button:disabled {
            border-color: #ccc;
            color: #ccc;
            cursor: not-allowed;
        }
        .subject-filter {
            margin-bottom: 20px;
        }
        .subject-filter select {
            padding: 8px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        .search-container {
            margin-bottom: 20px;
        }
        .search-container input {
            padding: 8px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 4px;
            width: 100%;
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="header-info">
                <h1>Bảng điểm Lớp: <%= classId %></h1>
                <p class="welcome-text">Xin chào, <%= staffName %></p>
            </div>
            <div class="header-buttons">
                <a href="<%= BASE_URL %>/class/<%= classId %>" class="btn back-btn">Quay lại</a>
                <a href="<%= BASE_URL %>/auth/logout" class="btn logout-btn">Đăng xuất</a>
            </div>
        </header>

        <% if (typeof error !== 'undefined' && error) { %>
            <div class="error-message"><%= error %></div>
        <% } %>

        <div class="grades-container">
            <div class="search-container">
                <input type="text" id="search" placeholder="Tìm theo mã SV hoặc họ tên...">
            </div>
            <div class="subject-filter">
                <label for="subject-select">Chọn môn học:</label>
                <select id="subject-select">
                    <% subjects.forEach(subject => { %>
                        <% if (subject.MAHP) { %>
                            <option value="<%= subject.MAHP %>"><%= subject.TENHP %></option>
                        <% } %>
                    <% }); %>
                </select>
            </div>
            <div class="grades-table">
                <table>
                    <thead id="grades-thead">
                        <tr>
                            <th>Mã SV</th>
                            <th>Họ tên</th>
                            <th>Điểm</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="grades-tbody">
                        <!-- Sinh viên sẽ được render bằng JavaScript -->
                    </tbody>
                </table>
                <div class="pagination" id="pagination"></div>
            </div>
        </div>
    </div>

    <script>
        const students = JSON.parse('<%- students %>');
        const subjects = JSON.parse('<%- JSON.stringify(subjects) %>');
        const grades = JSON.parse('<%- grades %>');
        const itemsPerPage = 7;
        let currentPage = 1;
        let selectedSubject = subjects[0]?.MAHP || '';
        let filteredStudents = [...students];
        let totalPages = Math.ceil(filteredStudents.length / itemsPerPage);

        // Map grades to students
        students.forEach(student => {
            student.grades = {};
            grades.forEach(grade => {
                if (grade.MASV === student.MASV) {
                    student.grades[grade.MAHP] = grade.DIEMTHI;
                }
            });
        });

        function filterStudents() {
            const searchValue = document.getElementById('search').value.trim().toLowerCase();
            
            filteredStudents = students.filter(student => 
                student.MASV.toLowerCase().includes(searchValue) ||
                student.HOTEN.toLowerCase().includes(searchValue)
            );
            
            totalPages = Math.ceil(filteredStudents.length / itemsPerPage);
            currentPage = 1;
            renderStudents(currentPage);
            renderPagination();
        }

        function renderStudents(page) {
            const tbody = document.getElementById('grades-tbody');
            tbody.innerHTML = '';

            if (filteredStudents.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="4" class="text-center">Không có sinh viên nào</td>
                    </tr>
                `;
                return;
            }

            if (!selectedSubject) {
                filteredStudents.forEach(student => {
                    const row = document.createElement('tr');
                    row.dataset.masv = student.MASV;
                    row.dataset.malop = '<%= classId %>';
                    row.innerHTML = `
                        <td>${student.MASV}</td>
                        <td>${student.HOTEN}</td>
                        <td>-</td>
                        <td>-</td>
                    `;
                    tbody.appendChild(row);
                });
                return;
            }

            const start = (page - 1) * itemsPerPage;
            const end = start + itemsPerPage;
            filteredStudents.slice(start, end).forEach(student => {
                const row = document.createElement('tr');
                row.dataset.masv = student.MASV;
                row.dataset.malop = '<%= classId %>';
                const grade = student.grades && student.grades[selectedSubject];
                let gradeText = '-';
                let color = '#95a5a6';
                if (grade !== undefined && grade !== null && grade !== 'N/A') {
                    gradeText = parseFloat(grade).toFixed(1);
                    color = grade >= 5 ? '#2ecc71' : '#e74c3c';
                }
                row.innerHTML = `
                    <td>${student.MASV}</td>
                    <td>${student.HOTEN}</td>
                    <td>
                        <span class="grade-value" style="color: ${color}" data-mahp="${selectedSubject}">${gradeText}</span>
                    </td>
                    <td>
                        <span class="edit-grade-btn">[Sửa]</span>
                        <span class="update-grade-btn" style="display: none;">[Lưu]</span>
                        <span class="cancel-grade-btn" style="display: none;">[Hủy]</span>
                    </td>
                `;
                tbody.appendChild(row);
            });
            attachEventListeners();
        }

        function renderPagination() {
            const pagination = document.getElementById('pagination');
            pagination.innerHTML = '';

            const prevButton = document.createElement('button');
            prevButton.textContent = 'Trước';
            prevButton.disabled = currentPage === 1 || !selectedSubject;
            prevButton.addEventListener('click', () => {
                if (currentPage > 1) {
                    currentPage--;
                    renderStudents(currentPage);
                    renderPagination();
                }
            });
            pagination.appendChild(prevButton);

            for (let i = 1; i <= totalPages; i++) {
                const pageButton = document.createElement('button');
                pageButton.textContent = i;
                pageButton.disabled = !selectedSubject;
                if (i === currentPage && selectedSubject) pageButton.classList.add('active');
                pageButton.addEventListener('click', () => {
                    currentPage = i;
                    renderStudents(currentPage);
                    renderPagination();
                });
                pagination.appendChild(pageButton);
            }

            const nextButton = document.createElement('button');
            nextButton.textContent = 'Sau';
            nextButton.disabled = currentPage === totalPages || !selectedSubject;
            nextButton.addEventListener('click', () => {
                if (currentPage < totalPages) {
                    currentPage++;
                    renderStudents(currentPage);
                    renderPagination();
                }
            });
            pagination.appendChild(nextButton);
        }

        function attachEventListeners() {
            document.querySelectorAll('.edit-grade-btn').forEach(btn => {
                btn.addEventListener('click', (e) => {
                    const row = e.target.closest('tr');
                    const gradeCell = row.querySelector('.grade-value');
                    const mahp = gradeCell.dataset.mahp;
                    if (mahp && mahp !== 'undefined') {
                        const currentGrade = gradeCell.textContent !== '-' ? gradeCell.textContent : '';
                        gradeCell.innerHTML = `<input type="number" class="grade-input" step="0.1" min="0" max="10" value="${currentGrade}" data-mahp="${mahp}">`;
                    }
                    row.querySelector('.edit-grade-btn').style.display = 'none';
                    row.querySelector('.update-grade-btn').style.display = 'inline';
                    row.querySelector('.cancel-grade-btn').style.display = 'inline';
                });
            });

            document.querySelectorAll('.cancel-grade-btn').forEach(btn => {
                btn.addEventListener('click', () => {
                    renderStudents(currentPage);
                });
            });

            document.querySelectorAll('.update-grade-btn').forEach(btn => {
                btn.addEventListener('click', async (e) => {
                    const row = e.target.closest('tr');
                    const masv = row.dataset.masv;
                    const malop = row.dataset.malop;
                    const input = row.querySelector('.grade-input');
                    const mahp = input.dataset.mahp;
                    const diemthi = input.value.trim();

                    if (diemthi && (isNaN(diemthi) || diemthi < 0 || diemthi > 10)) {
                        alert('Vui lòng nhập điểm hợp lệ (0-10)!');
                        return;
                    }

                    if (!diemthi && diemthi !== '0') {
                        alert('Vui lòng nhập điểm hợp lệ!');
                        return;
                    }

                    if (!confirm('Bạn có chắc chắn muốn lưu điểm này?')) return;

                    try {
                        const grade = { masv, mahp, diemthi: parseFloat(diemthi), malop };
                        console.log('Sending grade update:', grade);
                        const response = await fetch(`<%= BASE_URL %>/grades/${masv}/grade`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(grade)
                        });

                        const text = await response.text();
                        console.log('Response status:', response.status, 'Response:', text);

                        let result;
                        try {
                            result = JSON.parse(text);
                        } catch (err) {
                            console.error('Error parsing response:', err);
                            throw new Error(`Phản hồi không phải JSON: ${text}`);
                        }

                        if (!result.success) {
                            console.error('Update failed:', result.error);
                            throw new Error(result.error || 'Lỗi khi cập nhật điểm');
                        }

                        const cell = row.querySelector(`.grade-value[data-mahp="${mahp}"]`);
                        cell.textContent = parseFloat(diemthi).toFixed(1);
                        cell.style.color = diemthi >= 5 ? '#2ecc71' : '#e74c3c';
                        if (!students.find(s => s.MASV === masv).grades) {
                            students.find(s => s.MASV === masv).grades = {};
                        }
                        students.find(s => s.MASV === masv).grades[mahp] = parseFloat(diemthi);

                        row.querySelector('.edit-grade-btn').style.display = 'inline';
                        row.querySelector('.update-grade-btn').style.display = 'none';
                        row.querySelector('.cancel-grade-btn').style.display = 'none';

                        alert('Cập nhật điểm thành công!');
                    } catch (err) {
                        console.error('Error updating grades:', err);
                        alert('Đã xảy ra lỗi: ' + err.message);
                    }
                });
            });

            document.getElementById('search').addEventListener('input', filterStudents);
        }

        document.getElementById('subject-select')?.addEventListener('change', (e) => {
            selectedSubject = e.target.value;
            currentPage = 1;
            filterStudents();
        });

        console.log('Subjects data:', subjects);
        console.log('Students data:', students);

        if (students.length > 0 && selectedSubject) {
            document.getElementById('subject-select').value = selectedSubject;
            renderStudents(currentPage);
            renderPagination();
        }
    </script>
</body>
</html>